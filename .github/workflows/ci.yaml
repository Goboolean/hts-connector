name: CI

on: 
  push:
    branches: 
    - main
  pull_request:
    branches:
    - main

jobs:
  test:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    
    env:
      INFLUXDB_URL: http://localhost:8086
      INFLUXDB_DB: sample-bucket
      INFLUXDB_TOKEN: token
      INFLUXDB_ORG: goboolean

    services:
      influxdb:
        image: influxdb:2.0
        ports:
          - 8086:8086
        env:
          DOCKER_INFLUXDB_INIT_ORG: ${{ env.INFLUXDB_ORG }}
          DOCKER_INFLUXDB_INIT_BUCKET: ${{ env.INFLUXDB_DB }}
          DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${{ env.INFLUXDB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry- 

      - name: Cache Cargo build
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Run tests
        run: make test


  test-windows:
    strategy:
      matrix:
        platform: [windows-latest]
    runs-on: ${{ matrix.platform }}
    
    env:
      INFLUXDB_URL: http://localhost:8086
      INFLUXDB_DB: sample-bucket
      INFLUXDB_TOKEN: token
      INFLUXDB_ORG: goboolean

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
  
      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry- 

      - name: Cache Cargo build
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Build project
        run: make build

      - name: Run tests
        run: make test

  lint:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache Cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache Cargo build
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-

    - name: Discover files
      run: find . -type f ! -name ".*"

    - name: Build project
      run: make build

    - name: Run Clippy
      run: make lint
